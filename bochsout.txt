00000000000i[      ] Bochs x86 Emulator 2.6.9
00000000000i[      ]   Built from SVN snapshot on April 9, 2017
00000000000i[      ] Compiled on Apr  9 2017 at 09:32:13
00000000000i[      ] System configuration
00000000000i[      ]   processors: 1 (cores=1, HT threads=1)
00000000000i[      ]   A20 line support: yes
00000000000i[      ] IPS is set to 10000000
00000000000i[      ] CPU configuration
00000000000i[      ]   SMP support: no
00000000000i[      ]   level: 6
00000000000i[      ]   APIC support: xapic
00000000000i[      ]   FPU support: yes
00000000000i[      ]   MMX support: yes
00000000000i[      ]   3dnow! support: no
00000000000i[      ]   SEP support: yes
00000000000i[      ]   SIMD support: sse2
00000000000i[      ]   XSAVE support: no 
00000000000i[      ]   AES support: no
00000000000i[      ]   SHA support: no
00000000000i[      ]   MOVBE support: no
00000000000i[      ]   ADX support: no
00000000000i[      ]   x86-64 support: yes
00000000000i[      ]   1G paging support: no
00000000000i[      ]   MWAIT support: yes
00000000000i[      ]   VMX support: 1
00000000000i[      ] Optimization configuration
00000000000i[      ]   RepeatSpeedups support: yes
00000000000i[      ]   Fast function calls: yes
00000000000i[      ]   Handlers Chaining speedups: yes
00000000000i[      ] Devices configuration
00000000000i[      ]   PCI support: i440FX i430FX
00000000000i[      ]   Networking support: NE2000 E1000
00000000000i[      ]   Sound support: SB16 ES1370
00000000000i[      ]   USB support: UHCI OHCI EHCI xHCI
00000000000i[      ]   VGA extension support: vbe cirrus voodoo
00000000000i[MEM0  ] allocated memory at 03BA0020. after alignment, vector=03BA1000
00000000000i[MEM0  ] 300.00MB
00000000000i[MEM0  ] mem block size = 0x00020000, blocks=2400
00000000000i[MEM0  ] rom at 0xfffe0000/131072 ('C:\cygwin\usr\local\bin\Bochs-2.6.9/BIOS-bochs-latest')
00000000000i[PLUGIN] init_dev of 'pci' plugin device by virtual method
00000000000i[DEV   ] i440FX PMC present at device 0, function 0
00000000000i[PLUGIN] init_dev of 'pci2isa' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[PLUGIN] init_dev of 'cmos' plugin device by virtual method
00000000000i[CMOS  ] Using local time for initial clock
00000000000i[CMOS  ] Setting initial clock to: Mon Sep 11 13:38:50 2017 (time0=1505133530)
00000000000i[PLUGIN] init_dev of 'dma' plugin device by virtual method
00000000000i[DMA   ] channel 4 used by cascade
00000000000i[PLUGIN] init_dev of 'pic' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'pit' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'vga' plugin device by virtual method
00000000000i[MEM0  ] Register memory access handlers: 0x0000000a0000 - 0x0000000bffff
00000000000i[VGA   ] interval=200000, mode=realtime
00000000000i[WINGUI] Desktop Window dimensions: 1920 x 1080
00000000000i[WINGUI] Number of Mouse Buttons = 16
00000000000i[WINGUI] IME disabled
00000000000i[MEM0  ] rom at 0xc0000/41472 ('C:\cygwin\usr\local\bin\Bochs-2.6.9/VGABIOS-lgpl-latest')
00000000000i[PLUGIN] init_dev of 'floppy' plugin device by virtual method
00000000000i[DMA   ] channel 2 used by Floppy Drive
00000000000i[FLOPPY] tried to open '/dev/fd0' read/write: No such file or directory
00000000000i[FLOPPY] tried to open '/dev/fd0' read only: No such file or directory
00000000000i[FLOPPY] tried to open 'b.img' read/write: No such file or directory
00000000000i[FLOPPY] tried to open 'b.img' read only: No such file or directory
00000000000i[FLOPPY] Using boot sequence disk, none, none
00000000000i[FLOPPY] Floppy boot signature check is enabled
00000000000i[PLUGIN] init_dev of 'acpi' plugin device by virtual method
00000000000i[DEV   ] ACPI Controller present at device 1, function 3
00000000000i[PLUGIN] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAPIC] initializing I/O APIC
00000000000i[MEM0  ] Register memory access handlers: 0x0000fec00000 - 0x0000fec00fff
00000000000i[IOAPIC] IOAPIC enabled (base address = 0xfec00000)
00000000000i[PLUGIN] init_dev of 'keyboard' plugin device by virtual method
00000000000i[KBD   ] will paste characters every 400 keyboard ticks
00000000000i[PLUGIN] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD    ] HD on ata0-0: 'xv6.img', 'flat' mode
00000000000i[IMG   ] hd_size: 5120000
00000000000i[HD    ] ata0-0: using specified geometry: CHS=100/10/10
00000000000i[HD    ] HD on ata0-1: 'fs.img', 'flat' mode
00000000000i[IMG   ] hd_size: 512000
00000000000i[HD    ] ata0-1: using specified geometry: CHS=1024/1/1
00000000000p[HD    ] >>PANIC<< ata0-1: specified geometry doesn't fit on disk image
00000000000i[HD    ] translation on ata0-0 set to 'none'
00000000000i[HD    ] translation on ata0-1 set to 'none'
00000000000i[PLUGIN] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[PLUGIN] init_dev of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'speaker' plugin device by virtual method
00000000000i[PCSPK ] Using lowlevel sound support for output
00000000000i[PLUGIN] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR   ] parallel port 1 at 0x0378 irq 7
00000000000i[PLUGIN] init_dev of 'serial' plugin device by virtual method
00000000000i[SER   ] com1 at 0x03f8 irq 4 (mode: null)
00000000000i[PLUGIN] init_dev of 'gameport' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'usb_uhci' plugin device by virtual method
00000000000i[DEV   ] USB UHCI present at device 1, function 2
00000000000i[UHCI  ] USB UHCI initialized
00000000000i[PLUGIN] register state of 'pci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] register state of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] register state of 'dma' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pit' plugin device by virtual method
00000000000i[PLUGIN] register state of 'vga' plugin device by virtual method
00000000000i[PLUGIN] register state of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] register state of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] register state of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] register state of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] register state of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] register state of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] register state of 'serial' plugin device by virtual method
00000000000i[PLUGIN] register state of 'gameport' plugin device by virtual method
00000000000i[PLUGIN] register state of 'usb_uhci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] register state of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] register state of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci_ide' plugin device by virtual method
00000000000i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0  ] cpu hardware reset
00000000000i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00000000000i[CPU0  ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00000000000i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00002028 1fcbfbff
00000000000i[CPU0  ] CPUID[0x00000002]: 00410601 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00000000000i[CPU0  ] CPUID[0x80000000]: 80000008 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x80000001]: 00000000 00000000 00000101 2a100000
00000000000i[CPU0  ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00000000000i[CPU0  ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00000000000i[CPU0  ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00000000000i[CPU0  ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00000000000i[CPU0  ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00000000000i[CPU0  ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x80000008]: 00003028 00000000 00000000 00000000
00000000000i[PLUGIN] reset of 'pci' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] reset of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] reset of 'dma' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pit' plugin device by virtual method
00000000000i[PLUGIN] reset of 'vga' plugin device by virtual method
00000000000i[PLUGIN] reset of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] reset of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00000000000i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] reset of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] reset of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] reset of 'serial' plugin device by virtual method
00000000000i[PLUGIN] reset of 'gameport' plugin device by virtual method
00000000000i[PLUGIN] reset of 'usb_uhci' plugin device by virtual method
00000004635i[BIOS  ] $Revision: 13073 $ $Date: 2017-02-16 22:43:52 +0100 (Do, 16. Feb 2017) $
00000320053i[KBD   ] reset-disable command received
00000325711i[BIOS  ] Starting rombios32
00000326154i[BIOS  ] Shutdown flag 0
00000326726i[BIOS  ] ram_size=0x12c00000
00000327199i[BIOS  ] ram_end=300MB
00001503070i[WINGUI] dimension update x=720 y=400 fontheight=16 fontwidth=9 bpp=8
00002495352i[BIOS  ] Found 1 cpu(s)
00002508796i[BIOS  ] bios_table_addr: 0x000f9cd8 end=0x000fcc00
00002835004i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00003164714i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b
00003164740i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09
00003164740i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b
00003164740i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09
00003164740i[P2ISA ] write: ELCR2 = 0x0a
00003165427i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a
00003172945i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00003175224i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00003177502i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00003177893i[PIDE  ] new BM-DMA address: 0xc000
00003178432i[BIOS  ] region 4: 0x0000c000
00003180201i[BIOS  ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03
00003180713i[UHCI  ] new base address: 0xc020
00003181266i[BIOS  ] region 4: 0x0000c020
00003181449i[UHCI  ] new irq line = 9
00003183044i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00003183402i[ACPI  ] new irq line = 11
00003183630i[ACPI  ] new irq line = 9
00003183649i[ACPI  ] new PM base address: 0xb000
00003183649i[ACPI  ] new SM base address: 0xb100
00003183681i[PCI   ] setting SMRAM control register to 0x4a
00003347799i[CPU0  ] Enter to System Management Mode
00003347799i[CPU0  ] enter_system_management_mode: temporary disable VMX while in SMM mode
00003347803i[CPU0  ] RSM: Resuming from System Management Mode
00003511825i[PCI   ] setting SMRAM control register to 0x0a
00003526431i[BIOS  ] MP table addr=0x000f9db0 MPC table addr=0x000f9ce0 size=0xc8
00003528413i[BIOS  ] SMBIOS table addr=0x000f9dc0
00003530393i[BIOS  ] ACPI tables: RSDP addr=0x000f9ee0 ACPI DATA addr=0x12bf0000 size=0xf72
00003533812i[BIOS  ] Firmware waking vector 0x12bf00cc
00003535759i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00003536340i[BIOS  ] bios_table_cur_addr: 0x000f9f04
00003664097i[VBIOS ] VGABios $Id: vgabios.c,v 1.76 2013/02/10 08:07:03 vruppert Exp $
00003667104i[VBIOS ] VBE Bios $Id: vbe.c,v 1.65 2014/07/08 18:02:25 vruppert Exp $
00004010169i[BIOS  ] ata0-0: PCHS=100/10/10 translation=none LCHS=100/10/10
00004063996i[BIOS  ] ata0-1: PCHS=1024/1/1 translation=none LCHS=1024/1/1
00034132059i[BIOS  ] Booting from 0000:7c00
00037721618i[APIC0 ] set timer divide factor to 1
00037723840e[SER   ] com1: write to tx hold register when not empty
00037725399e[SER   ] com1: write to tx hold register when not empty
00037726960e[SER   ] com1: write to tx hold register when not empty
00037728521e[SER   ] com1: write to tx hold register when not empty
00037730082e[SER   ] com1: write to tx hold register when not empty
00101620834e[SER   ] com1: write to tx hold register when not empty
00101622506e[SER   ] com1: write to tx hold register when not empty
00101624143e[SER   ] com1: write to tx hold register when not empty
00101625770e[SER   ] com1: write to tx hold register when not empty
00101627397e[SER   ] com1: write to tx hold register when not empty
00101629024e[SER   ] com1: write to tx hold register when not empty
00101631130e[SER   ] com1: write to tx hold register when not empty
00101632757e[SER   ] com1: write to tx hold register when not empty
00101634384e[SER   ] com1: write to tx hold register when not empty
00101636011e[SER   ] com1: write to tx hold register when not empty
00101637638e[SER   ] com1: write to tx hold register when not empty
00101639265e[SER   ] com1: write to tx hold register when not empty
00101641558e[SER   ] com1: write to tx hold register when not empty
00101646478e[SER   ] com1: write to tx hold register when not empty
00101648105e[SER   ] com1: write to tx hold register when not empty
00101649732e[SER   ] com1: write to tx hold register when not empty
00101651958e[SER   ] com1: write to tx hold register when not empty
00101653585e[SER   ] com1: write to tx hold register when not empty
00101655212e[SER   ] com1: write to tx hold register when not empty
00101656839e[SER   ] com1: write to tx hold register when not empty
00101658466e[SER   ] com1: write to tx hold register when not empty
00101660093e[SER   ] com1: write to tx hold register when not empty
00101662367e[SER   ] com1: write to tx hold register when not empty
00101663994e[SER   ] com1: write to tx hold register when not empty
00101665621e[SER   ] com1: write to tx hold register when not empty
00101667248e[SER   ] com1: write to tx hold register when not empty
00101668875e[SER   ] com1: write to tx hold register when not empty
00101670563e[SER   ] com1: write to tx hold register when not empty
00101672773e[SER   ] com1: write to tx hold register when not empty
00101674410e[SER   ] com1: write to tx hold register when not empty
00101676037e[SER   ] com1: write to tx hold register when not empty
00101677664e[SER   ] com1: write to tx hold register when not empty
00101679291e[SER   ] com1: write to tx hold register when not empty
00101680918e[SER   ] com1: write to tx hold register when not empty
00101683180e[SER   ] com1: write to tx hold register when not empty
00101684807e[SER   ] com1: write to tx hold register when not empty
00101686434e[SER   ] com1: write to tx hold register when not empty
00101688061e[SER   ] com1: write to tx hold register when not empty
00101689733e[SER   ] com1: write to tx hold register when not empty
00101691370e[SER   ] com1: write to tx hold register when not empty
00101693596e[SER   ] com1: write to tx hold register when not empty
00101695223e[SER   ] com1: write to tx hold register when not empty
00101696850e[SER   ] com1: write to tx hold register when not empty
00101698576e[SER   ] com1: write to tx hold register when not empty
00101700201e[SER   ] com1: write to tx hold register when not empty
00101701826e[SER   ] com1: write to tx hold register when not empty
00101704000e[SER   ] com1: write to tx hold register when not empty
00101705625e[SER   ] com1: write to tx hold register when not empty
00101707250e[SER   ] com1: write to tx hold register when not empty
00101708875e[SER   ] com1: write to tx hold register when not empty
00101710513e[SER   ] com1: write to tx hold register when not empty
00101712140e[SER   ] com1: write to tx hold register when not empty
00101714414e[SER   ] com1: write to tx hold register when not empty
00101716041e[SER   ] com1: write to tx hold register when not empty
00101717668e[SER   ] com1: write to tx hold register when not empty
00101719295e[SER   ] com1: write to tx hold register when not empty
00101720922e[SER   ] com1: write to tx hold register when not empty
00101722592e[SER   ] com1: write to tx hold register when not empty
00101724829e[SER   ] com1: write to tx hold register when not empty
00101726701e[SER   ] com1: write to tx hold register when not empty
00101728328e[SER   ] com1: write to tx hold register when not empty
00101729955e[SER   ] com1: write to tx hold register when not empty
00101731582e[SER   ] com1: write to tx hold register when not empty
00101733209e[SER   ] com1: write to tx hold register when not empty
00101735231e[SER   ] com1: write to tx hold register when not empty
00101736858e[SER   ] com1: write to tx hold register when not empty
00101738530e[SER   ] com1: write to tx hold register when not empty
00101740167e[SER   ] com1: write to tx hold register when not empty
00101741794e[SER   ] com1: write to tx hold register when not empty
00101743421e[SER   ] com1: write to tx hold register when not empty
00101745647e[SER   ] com1: write to tx hold register when not empty
00101747274e[SER   ] com1: write to tx hold register when not empty
00101748901e[SER   ] com1: write to tx hold register when not empty
00101750528e[SER   ] com1: write to tx hold register when not empty
00101752155e[SER   ] com1: write to tx hold register when not empty
00101753813e[SER   ] com1: write to tx hold register when not empty
00101756051e[SER   ] com1: write to tx hold register when not empty
00101757678e[SER   ] com1: write to tx hold register when not empty
00101759335e[SER   ] com1: write to tx hold register when not empty
00101761079e[SER   ] com1: write to tx hold register when not empty
00101762800e[SER   ] com1: write to tx hold register when not empty
00101764425e[SER   ] com1: write to tx hold register when not empty
00101766467e[SER   ] com1: write to tx hold register when not empty
00101768092e[SER   ] com1: write to tx hold register when not empty
00101769717e[SER   ] com1: write to tx hold register when not empty
00101771342e[SER   ] com1: write to tx hold register when not empty
00101772967e[SER   ] com1: write to tx hold register when not empty
00101774640e[SER   ] com1: write to tx hold register when not empty
00101776874e[SER   ] com1: write to tx hold register when not empty
00101778499e[SER   ] com1: write to tx hold register when not empty
00101780124e[SER   ] com1: write to tx hold register when not empty
00101781749e[SER   ] com1: write to tx hold register when not empty
00101783374e[SER   ] com1: write to tx hold register when not empty
00101785001e[SER   ] com1: write to tx hold register when not empty
00101787329e[SER   ] com1: write to tx hold register when not empty
00101789050e[SER   ] com1: write to tx hold register when not empty
00101790675e[SER   ] com1: write to tx hold register when not empty
00101792300e[SER   ] com1: write to tx hold register when not empty
00101793925e[SER   ] com1: write to tx hold register when not empty
00101795550e[SER   ] com1: write to tx hold register when not empty
00101797688e[SER   ] com1: write to tx hold register when not empty
00101799313e[SER   ] com1: write to tx hold register when not empty
00101800986e[SER   ] com1: write to tx hold register when not empty
00101802707e[SER   ] com1: write to tx hold register when not empty
00101804332e[SER   ] com1: write to tx hold register when not empty
00101805957e[SER   ] com1: write to tx hold register when not empty
00101808107e[SER   ] com1: write to tx hold register when not empty
00101809732e[SER   ] com1: write to tx hold register when not empty
00101811357e[SER   ] com1: write to tx hold register when not empty
00101812982e[SER   ] com1: write to tx hold register when not empty
00101814655e[SER   ] com1: write to tx hold register when not empty
00101816320e[SER   ] com1: write to tx hold register when not empty
00101818558e[SER   ] com1: write to tx hold register when not empty
00101820231e[SER   ] com1: write to tx hold register when not empty
00101821896e[SER   ] com1: write to tx hold register when not empty
00101823569e[SER   ] com1: write to tx hold register when not empty
00101825234e[SER   ] com1: write to tx hold register when not empty
00101826907e[SER   ] com1: write to tx hold register when not empty
00101828965e[SER   ] com1: write to tx hold register when not empty
00101830630e[SER   ] com1: write to tx hold register when not empty
89389430000p[WINGUI] >>PANIC<< POWER button turned off.
89389430000i[CPU0  ] CPU is in protected mode (active)
89389430000i[CPU0  ] CS.mode = 32 bit
89389430000i[CPU0  ] SS.mode = 32 bit
89389430000i[CPU0  ] EFER   = 0x00000000
89389430000i[CPU0  ] | EAX=00000000  EBX=8010a4a8  ECX=800b8e20  EDX=000003d5
89389430000i[CPU0  ] | ESP=8010a468  EBP=8010a4b0  ESI=8010a4a8  EDI=00000000
89389430000i[CPU0  ] | IOPL=0 id vip vif ac vm rf nt of df if tf sf ZF af PF cf
89389430000i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
89389430000i[CPU0  ] |  CS:0008( 0001| 0|  0) 00000000 ffffffff 1 1
89389430000i[CPU0  ] |  DS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
89389430000i[CPU0  ] |  SS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
89389430000i[CPU0  ] |  ES:0010( 0002| 0|  0) 00000000 ffffffff 1 1
89389430000i[CPU0  ] |  FS:0000( 0000| 0|  0) 00000000 00000000 0 0
89389430000i[CPU0  ] |  GS:0000( 0000| 0|  0) 00000000 00000000 0 0
89389430000i[CPU0  ] | EIP=8010038b (8010038b)
89389430000i[CPU0  ] | CR0=0xe0010011 CR2=0x00000000
89389430000i[CPU0  ] | CR3=0x003ff000 CR4=0x00000010
89389430000i[CPU0  ] 0x000000008010038b>> jmp .-2 (0x8010038b) : EBFE
89389430000i[CMOS  ] Last time is 1505142468 (Mon Sep 11 16:07:48 2017)
89389430000i[      ] restoring default signal behavior
89389430000i[SIM   ] quit_sim called with exit code 1
